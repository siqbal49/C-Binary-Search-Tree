Script started on 2019-11-12 17:12:18-05:00
bash-4.4$ pwd
/home/siqbal49/cs2211/asn4
bash-4.4$ date
Tue Nov 12 17:12:22 EST 2019
bash-4.4$ who am i
siqbal49 pts/47       2019-11-12 17:12
bash-4.4$ gcc -o bs_tree data.c bst.c bs_tree_main.c
bash-4.4$ gcc -o bs_tree data.c bst.c bs_tree_main.c./bs_tree 
( !                 99 )       9
( Once               1 )      11
( Once               5 )      50
( Time               4 )      44
( Upon              22 )       2
( Vancouver          8 )      88
( a                  3 )      33
( filmed             6 )      66
( in                 7 )      77
( is                 5 )      55
bash-4.4$ gcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cgcc -o bs_tree data.c bst.c bs_tree_main.cnano bs_tree_main.c 
[ Reading File ][ Read 25 lines (Converted from DOS format) ]  GNU nano 2.9.8                                                          bs_tree_main.c                                                                     ^G Get Help	 ^O Write Out     ^W Where Is	   ^K Cut Text^J Justify^C Cur PosM-U UndoM-A Mark Text    M-] To Bracket^X Exit^R Read File     ^\ Replace	   ^U Uncut Text    ^T To Spell^_ Go To Line    M-E RedoM-6 Copy Text    M-W WhereIs Next// ====== this is a sample main program:  bs_tree_main.c#include <stdio.h>#include "bst.h"int main(void) {BStree bst;bst = bstree_ini(256);bstree_insert(bst, key_construct("Once", 1),	  11);bstree_insert(bst, key_construct("Upon", 22),	   2);bstree_insert(bst, key_construct("a", 3),33);bstree_insert(bst, key_construct("Time", 4),	  44);bstree_insert(bst, key_construct("is", 5),55);bstree_insert(bst, key_construct("filmed", 6),    66);bstree_insert(bst, key_construct("in", 7),77);bstree_insert(bst, key_construct("Vancouver", 8), 88);bstree_insert(bst, key_construct("!", 99),9);bstree_insert(bst, key_construct("Once", 5),	  50);bstree_insert(bst, key_construct("Once", 1),	  10);bstree_traversal(bst);bstree_free(bst);Modifi10M-D DOS Format                   M-A Append               M-B Backup FileC CancelM-M Mac FormatM-P Prepend^T To FilesFile Name to Write [DOS Format]: bs_tree_main.c                                                                                                                      [ Wrote 25 lines ]^O Write Out     ^W Where Is      ^K Cut Text^J Justify       ^C Cur PosM-U Undo  M-A Mark Text    M-] To BracketX Exit  ^R Read File     ^\ Replace       ^U Uncut Text    ^T To Spell      ^_ Go To Line    M-E Redo  M-6 Copy Text    M-W WhereIs Nextbash-4.4$ nano bs_tree_main.c gcc -o bs_tree data.c bst.c bs_tree_main.c
bash-4.4$ gcc -o bs_tree data.c bst.c bs_tree_main.cnano bs_tree_main.c ./bs_tree
Error: tree is full. Cannot insert
( !                 99 )       9
( Once               1 )      11
( Once               5 )      50
( Time               4 )      44
( Upon              22 )       2
( Vancouver          8 )      88
( a                  3 )      33
( filmed             6 )      66
( in                 7 )      77
( is                 5 )      55
bash-4.4$ gcc -o bs_tree data.c bst.c bs_tree_main.cnano bs_tree_main.c 
[ Reading File ][ Read 25 lines (Converted from DOS format) ]  GNU nano 2.9.8                                                          bs_tree_main.c                                                                     ^G Get Help	 ^O Write Out     ^W Where Is	   ^K Cut Text^J Justify^C Cur PosM-U UndoM-A Mark Text    M-] To Bracket^X Exit^R Read File     ^\ Replace	   ^U Uncut Text    ^T To Spell^_ Go To Line    M-E RedoM-6 Copy Text    M-W WhereIs Next// ====== this is a sample main program:  bs_tree_main.c#include <stdio.h>#include "bst.h"int main(void) {BStree bst;bst = bstree_ini(10);bstree_insert(bst, key_construct("Once", 1),	  11);bstree_insert(bst, key_construct("Upon", 22),	   2);bstree_insert(bst, key_construct("a", 3),33);bstree_insert(bst, key_construct("Time", 4),	  44);bstree_insert(bst, key_construct("is", 5),55);bstree_insert(bst, key_construct("filmed", 6),    66);bstree_insert(bst, key_construct("in", 7),77);bstree_insert(bst, key_construct("Vancouver", 8), 88);bstree_insert(bst, key_construct("!", 99),9);bstree_insert(bst, key_construct("Once", 5),	  50);bstree_insert(bst, key_construct("Once", 1),	  10);bstree_traversal(bst);bstree_free(bst);Modifie5M-D DOS Format                   M-A Append               M-B Backup FileC CancelM-M Mac FormatM-P Prepend^T To FilesFile Name to Write [DOS Format]: bs_tree_main.c                                                                                                                      [ Wrote 25 lines ]^O Write Out     ^W Where Is      ^K Cut Text^J Justify       ^C Cur PosM-U Undo  M-A Mark Text    M-] To BracketX Exit  ^R Read File     ^\ Replace       ^U Uncut Text    ^T To Spell      ^_ Go To Line    M-E Redo  M-6 Copy Text    M-W WhereIs Nextbash-4.4$ nano bs_tree_main.c gcc -o bs_tree data.c bst.c bs_tree_main.c
bash-4.4$ gcc -o bs_tree data.c bst.c bs_tree_main.cnano bs_tree_main.c ./bs_tree
Error: tree is full. Cannot insert
Error: tree is full. Cannot insert
Error: tree is full. Cannot insert
Error: tree is full. Cannot insert
Error: tree is full. Cannot insert
Error: tree is full. Cannot insert
( Once               1 )      11
( Time               4 )      44
( Upon              22 )       2
( a                  3 )      33
( is                 5 )      55
bash-4.4$ gcc -o bs_tree data.c bst.c bs_tree_main.cnano bs_tree_main.c 
[ Reading File ][ Read 25 lines (Converted from DOS format) ]  GNU nano 2.9.8                                                          bs_tree_main.c                                                                     ^G Get Help	 ^O Write Out     ^W Where Is	   ^K Cut Text^J Justify^C Cur PosM-U UndoM-A Mark Text    M-] To Bracket^X Exit^R Read File     ^\ Replace	   ^U Uncut Text    ^T To Spell^_ Go To Line    M-E RedoM-6 Copy Text    M-W WhereIs Next// ====== this is a sample main program:  bs_tree_main.c#include <stdio.h>#include "bst.h"int main(void) {BStree bst;bst = bstree_ini(5);bstree_insert(bst, key_construct("Once", 1),	  11);bstree_insert(bst, key_construct("Upon", 22),	   2);bstree_insert(bst, key_construct("a", 3),33);bstree_insert(bst, key_construct("Time", 4),	  44);bstree_insert(bst, key_construct("is", 5),55);bstree_insert(bst, key_construct("filmed", 6),    66);bstree_insert(bst, key_construct("in", 7),77);bstree_insert(bst, key_construct("Vancouver", 8), 88);bstree_insert(bst, key_construct("!", 99),9);bstree_insert(bst, key_construct("Once", 5),	  50);bstree_insert(bst, key_construct("Once", 1),	  10);bstree_traversal(bst);bstree_free(bst);Modified);(256

bstree_insert(bst, key_construct("Once", 1),	  11);

bstree_insert(bst, key_construct("Once", 1),	  10);

bstree_insert(bst, key_construct("Time", 4),	  44);
M-D DOS Format                   M-A Append               M-B Backup FileC CancelM-M Mac FormatM-P Prepend^T To FilesFile Name to Write [DOS Format]: bs_tree_main.c                                                                                                                      [ Wrote 25 lines ]^O Write Out     ^W Where Is      ^K Cut Text^J Justify       ^C Cur PosM-U Undo  M-A Mark Text    M-] To BracketX Exit  ^R Read File     ^\ Replace       ^U Uncut Text    ^T To Spell      ^_ Go To Line    M-E Redo  M-6 Copy Text    M-W WhereIs Nextbash-4.4$ nano bs_tree_main.c gcc -o bs_tree data.c bst.c bs_tree_main.c
bash-4.4$ gcc -o bs_tree data.c bst.c bs_tree_main.cnano bs_tree_main.c ./bs_tree
( !                 99 )       9
( Once               1 )      10
( Once               5 )      50
( Time               4 )      44
( Upon              22 )       2
( Vancouver          8 )      88
( a                  3 )      33
( filmed             6 )      66
( in                 7 )      77
( is                 5 )      55
bash-4.4$ gcc -o bs_tree data.c bst.c bs_tree_main.cnano bs_tree_main.c 
[ Reading File ][ Read 25 lines (Converted from DOS format) ]  GNU nano 2.9.8                                                          bs_tree_main.c                                                                     ^G Get Help	 ^O Write Out     ^W Where Is	   ^K Cut Text^J Justify^C Cur PosM-U UndoM-A Mark Text    M-] To Bracket^X Exit^R Read File     ^\ Replace	   ^U Uncut Text    ^T To Spell^_ Go To Line    M-E RedoM-6 Copy Text    M-W WhereIs Next// ====== this is a sample main program:  bs_tree_main.c#include <stdio.h>#include "bst.h"int main(void) {BStree bst;bst = bstree_ini(256);bstree_insert(bst, key_construct("Once", 1),	  10);bstree_insert(bst, key_construct("Upon", 22),	   2);bstree_insert(bst, key_construct("a", 3),33);bstree_insert(bst, key_construct("is", 5),55);bstree_insert(bst, key_construct("filmed", 6),    66);bstree_insert(bst, key_construct("Once", 1),	  11);bstree_insert(bst, key_construct("in", 7),77);bstree_insert(bst, key_construct("Vancouver", 8), 88);bstree_insert(bst, key_construct("Time", 4),	  44);bstree_insert(bst, key_construct("!", 99),9);bstree_insert(bst, key_construct("Once", 5),	  50);bstree_traversal(bst);bstree_free(bst);}Modified
bstree_insert(bst, key_construct("Time", 4),	  44);

bstree_insert(bst, key_construct("Time", 4),	  44);

bstree_insert(bst, key_construct("Once", 1),	  11);M-D DOS Format                   M-A Append               M-B Backup FileC CancelM-M Mac FormatM-P Prepend^T To FilesFile Name to Write [DOS Format]: bs_tree_main.c                                                                                                                      [ Wrote 26 lines ]^O Write Out     ^W Where Is      ^K Cut Text^J Justify       ^C Cur PosM-U Undo  M-A Mark Text    M-] To BracketX Exit  ^R Read File     ^\ Replace       ^U Uncut Text    ^T To Spell      ^_ Go To Line    M-E Redo  M-6 Copy Text    M-W WhereIs Nextbash-4.4$ nano bs_tree_main.c gcc -o bs_tree data.c bst.c bs_tree_main.c
bash-4.4$ gcc -o bs_tree data.c bst.c bs_tree_main.cnano bs_tree_main.c ./bs_tree
( !                 99 )       9
( Once               1 )      10
( Once               5 )      50
( Time               4 )      44
( Upon              22 )       2
( Vancouver          8 )      88
( a                  3 )      33
( filmed             6 )      66
( in                 7 )      77
( is                 5 )      55
bash-4.4$ end
bash: end: command not found
bash-4.4$ exit
exit

Script done on 2019-11-12 17:17:39-05:00
